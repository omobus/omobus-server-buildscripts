# /etc/lighttpd/lighttpd.conf: LigHTTPd configuration file.

server.chroot   	= "/var/www"
server.upload-dirs 	= ( "/uploads" )
#server.port 		= 80
#server.use-ipv6 	= "enable"
#server.bind 		= "localhost"
server.username  	= "lighttpd"
server.groupname 	= "lighttpd"
#server.core-files 	= "disable"
server.document-root 	= "/htdocs"
#server.tag 		= "lighttpd"
server.pid-file 	= "/run/lighttpd.pid"
#server.errorlog-use-syslog = "enable"
server.errorlog 	= "/log/error.log"
server.event-handler 	= "linux-sysepoll"
server.network-backend 	= "linux-sendfile"
server.max-fds 		= 2048
server.stat-cache-engine= "simple"
server.max-connections 	= 1024
#server.max-keep-alive-idle = 5
#server.max-keep-alive-requests = 16
#server.max-request-size= 0
#server.max-read-idle 	= 60
#server.max-write-idle 	= 360
#server.kbytes-per-second = 128
#connection.kbytes-per-second = 32
server.follow-symlink 	= "disable"
#server.force-lowercase-filenames = "disable"

server.http-parseopts = (
    "header-strict" 		=> "enable",
    "host-strict" 		=> "enable",
    "host-normalize" 		=> "enable",
    "url-normalize" 		=> "enable",
    "url-normalize-unreserved" 	=> "enable",
    "url-normalize-required" 	=> "enable",
    "url-ctrls-reject" 		=> "enable",
    "url-path-2f-decode" 	=> "enable",
    "url-path-dotseg-remove" 	=> "enable",
    "url-query-20-plus" 	=> "enable"
)

server.modules = (
    "mod_access",
    "mod_accesslog",
    "mod_alias",
    "mod_auth",
    "mod_authn_ldap",
    "mod_redirect",
    "mod_scgi",
    "mod_openssl"
)

auth.backend 			= "ldap"
auth.backend.ldap.hostname 	= "127.0.0.1:389"
#auth.backend.ldap.starttls 	= "enable"
#auth.backend.ldap.ca-file 	= ""
auth.backend.ldap.base-dn 	= "ou=_dev,ou=users,dc=omobus,dc=local"
auth.backend.ldap.filter 	= "(&(objectClass=posixAccount)(FTPStatus=enabled)(exchangeStatus=enabled)(syncErpId=*)(uid=?))"
auth.backend.ldap.bind-dn 	= "uid=lighttpd,ou=services,dc=omobus,dc=local"
auth.backend.ldap.bind-pw 	= "0"
auth.backend.ldap.allow-empty-pw = "disable"

auth.require = ( 
    "/ddi/" => (
	"method" => "basic",
	"realm" => "omobus device data impersonation service (only for demo or dev users)",
	"require" => "valid-user"
    )
)

accesslog.filename 	= "/log/access.log"
#accesslog.format 	= "%h %l %u %t \"%r\" %b %>s \"%{User-Agent}i\" \"%{Referer}i\""
#accesslog.use-syslog 	= "enable"

index-file.names += (
    "index.html", "index.htm"
)

$SERVER["socket"] == ":443" {
    ssl.engine = "enable" 
    ssl.use-sslv3 = "disable"
    ssl.pemfile = "/etc/ssl/omobus/lighttpd.pem"
    #ssl.ca-file = "/etc/ssl/certs/OMOBUS_Root_Certification_Authority.pem"
}

$HTTP["scheme"] == "http" {
    $HTTP["host"] =~ ".*" {
        url.redirect = (".*" => "https://%0$0")
    }
}

# The first line enables SCGI only if the requested URL does not have an extension.
# The purpose of this is to serve stylesheets and images directly without going through
# SCGI and omobus-scgid.
$HTTP["url"] !~ "\.[^.]+$" {
    scgi.server = (
	"/console/" =>
	    ( "127.0.0.1" =>
		(
		    "socket" => "/run/omobus-console.sock",
		    "fix-root-scriptname" => "enable",
		    "check-local" => "disable"
		)
	    ),
	"/ddi/" =>
	    ( "127.0.0.1" =>
		(
		    "socket" => "/run/omobus-ddi.sock",
		    "fix-root-scriptname" => "enable",
		    "check-local" => "disable"
		)
	    )
    )
}

mimetype.use-xattr = "disable"
mimetype.assign = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".spec"         =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  ".rpm"          =>      "application/x-rpm",
  # make the default mime type application/octet-stream.
  ""              =>      "application/octet-stream",
)
